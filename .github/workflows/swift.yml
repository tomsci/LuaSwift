# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Swift

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: macos-13

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Switch Xcode
      run: sudo xcode-select -s /Applications/Xcode_14.3.1.app
    - name: Build
      run: swift build -v
    - name: Run tests
      run: swift test -v
    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v5
    - name: Build documentation
      run: |
        git apply enable-docc-dependency.patch
        swift package --allow-writing-to-directory _site generate-documentation --target Lua --disable-indexing --transform-for-static-hosting --hosting-base-path LuaSwift --output-path _site --include-extended-types
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3

  # Disabled due to https://github.com/swift-actions/setup-swift/issues/694
  # "The process '/usr/bin/gpg' failed with exit code 2"
  #
  #  build-linux:
  #
  #    runs-on: ubuntu-latest
  #
  #    steps:
  #    - name: Checkout repository
  #      uses: actions/checkout@v3
  #      with:
  #        submodules: recursive
  #    - uses: swift-actions/setup-swift@v2
  #    - name: Build
  #      run: swift build -v
  #    - name: Run tests
  #      run: swift test -v

  build-oss:

    runs-on: macos-13

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: swift-actions/setup-swift@v2
    - name: Build
      run: swift build -v
    - name: Run tests
      run: swift test -v

  deploy:
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or the latest "vX.X.X" version tag for this action
